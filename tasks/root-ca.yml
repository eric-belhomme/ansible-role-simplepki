---
### CA environment initialization
- name: create CA directory structure
  file:
    path: "{{ pki_root_path }}/{{ item }}"
    mode: 0750
    state: directory
  with_items:
  - ca/root-ca/db
  - ca/signing-ca/db
  - crl
  - certs
  - etc
  delegate_to: localhost

- name: create CA directories private dir
  file:
    path: "{{ pki_root_path }}/ca/{{ item }}"
    mode: 0700
    state: directory
  with_items:
  - root-ca/private
  - signing-ca/private
  delegate_to: localhost

- name: copy PKI configuration files
  template:
    src: "{{ item }}.j2"
    dest: "{{ pki_root_path }}/etc/{{ item }}"
    mode: 0640
  with_items:
  - root-ca.conf
  - signing-ca.conf
  delegate_to: localhost

- name: initialize db file {{ item }}
  include_tasks: root-ca_createfile.yml
  vars:
    file_name: "{{ item }}"
    file_content: ''
  with_items:
  - root-ca/db/root-ca.db
  - root-ca/db/root-ca.db.attr
  - signing-ca/db/root-ca.db
  - signing-ca/db/root-ca.db.attr

- name: initialize serial file {{ item }}
  include_tasks: root-ca_createfile.yml
  vars:
    file_name: "{{ item }}"
    file_content: '01'
  with_items:
  - root-ca/db/root-ca.crl.srl
  - root-ca/db/root-ca.crt.srl
  - signing-ca/db/root-ca.crl.srl
  - signing-ca/db/root-ca.crt.srl

### Root CA
- name: check if root-ca key file exists
  stat:
    path: "{{ pki_root_path }}/ca/root-ca/private/root-ca.key"
  delegate_to: localhost
  register: root_key_present

- name: create root CA key file
  command: "openssl genrsa -out {{ pki_root_path }}/ca/root-ca/private/root-ca.key {{ ca_rsa_key_size }}"
  delegate_to: localhost
  when: root_key_present.stat.exists != True

- name: set mode for root CA key file
  file:
    path: "{{ pki_root_path }}/ca/root-ca/private/root-ca.key"
    mode: 0400
  delegate_to: localhost

- name: check if root-ca CSR file exists
  stat:
    path: "{{ pki_root_path }}/csr/root-ca.csr"
  delegate_to: localhost
  register: root_csr_present

- name: create request for CA cert
  shell: |
    openssl req -new
    -key {{ pki_root_path }}/ca/root-ca/private/root-ca.key
    -out {{ pki_root_path }}/csr/root-ca.csr
    -subj "/C={{ca_country}}/ST={{ca_state}}/L={{ca_locality}}/O={{ca_organization_name}}/OU={{ca_organizational_unit}}/CN={{ca_common_name}}"
    -config {{ pki_root_path }}/etc/root-ca.conf
  args:
    executable: /bin/bash
  delegate_to: localhost
  when: root_csr_present.stat.exists == False

- name: set mode for CA csr file
  file:
    path: "{{ pki_root_path }}/csr/root-ca.csr"
    mode: 0640
  delegate_to: localhost

- name: check if root-ca certificate file exists
  stat:
    path: "{{ pki_root_path }}/ca/root-ca.crt"
  delegate_to: localhost
  register: root_crt_present

- name: Generate a Self Signed OpenSSL certificate
  shell: |
    openssl ca -selfsign
      -config {{ pki_root_path }}/etc/root-ca.conf
      -in {{ pki_root_path }}/ca/root-ca.csr
      -out {{ pki_root_path }}/ca/root-ca.crt
      -extensions root_ca_ext
  args:
    executable: /bin/bash
  delegate_to: localhost
  when: root_crt_present.stat.exists == False

- name: set mode for CA crt file
  file:
    path: "{{ pki_root_path }}/ca/root-ca.crt"
    mode: 0640
  delegate_to: localhost
  
### Signing CA
- name: check if root-ca key file exists
  stat:
    path: "{{ pki_root_path }}/ca/signing-ca/private/signing-ca.key"
  delegate_to: localhost
  register: root_key_present

- name: create root CA key file
  command: "openssl genrsa -out {{ pki_root_path }}/ca/signing-ca/private/signing-ca.key {{ ca_rsa_key_size }}"
  delegate_to: localhost
  when: root_key_present.stat.exists != True

- name: set mode for root CA key file
  file:
    path: "{{ pki_root_path }}/ca/root-ca/private/root-ca.key"
    mode: 0400
  delegate_to: localhost

- name: check if root-ca CSR file exists
  stat:
    path: "{{ pki_root_path }}/ca/signing-ca.csr"
  delegate_to: localhost
  register: signing_csr_present

- name: create request for CA cert
  shell: |
    openssl req -new
      -config {{ pki_root_path }}/etc/signing-ca.conf
      -out {{ pki_root_path }}/ca/signing-ca.csr
#      -subj "/C={{ca_country}}/ST={{ca_state}}/L={{ca_locality}}/O={{ca_organization_name}}/OU={{ca_organizational_unit}}/CN={{ca_common_name}}"
  args:
    executable: /bin/bash
  delegate_to: localhost
  when: signing_csr_present.stat.exists == False

- name: set mode for signing CA csr file
  file:
    path: "{{ pki_root_path }}/csr/signing-ca.csr"
    mode: 0640
  delegate_to: localhost

- name: check if signing-ca certificate file exists
  stat:
    path: "{{ pki_root_path }}/ca/signing-ca.crt"
  delegate_to: localhost
  register: signing_crt_present

- name: Generate a signing CA certificate
  shell: |
    openssl ca
      config {{ pki_root_path }}/etc/root-ca.conf
      -in {{ pki_root_path }}/ca/signing-ca.csr
      -out {{ pki_root_path }}/ca/signing-ca.crt
      -extensions signing_ca_ext
  args:
    executable: /bin/bash
  delegate_to: localhost
  when: signing_crt_present.stat.exists == False

- name: set mode for signing CA crt file
  file:
    path: "{{ pki_root_path }}/ca/signing-ca.crt"
    mode: 0640
  delegate_to: localhost

# vim: bs=2 sw=2 expandtab: